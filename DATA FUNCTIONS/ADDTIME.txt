****** MySQL функция ADDTIME ******

MySQL функция ADDTIME возвращает значение дата/время и времени, к 
которому был добавлен временной интервал.

Синтаксис MySQL функции ADDTIME:

**********************************************************************************
ADDTIME( start_value, time )
**********************************************************************************

Параметры:
- start_value - значение времени или даты и времени, к которому должен быть 
                добавлен временной интервал.
- time - значение временного интервала, который вы хотите добавить. Это может 
         быть положительное или отрицательное значение.

!!! ВНИМАНИЕ !!!
Использование функции ADDTIME с отрицательным значением time в качестве параметра 
эквивалентно использованию функции SUBTIME.
См. также функции DATE_ADD, DATE_SUB, ADDTIME и SUBTIME

Функция ADDTIME может использоваться в следующих версиях MySQL:
MySQL 5.7, MySQL 5.6, MySQL 5.5, MySQL 5.1, MySQL 5.0, MySQL 4.1, MySQL 4.0, MySQL 3.23
!!! ВНИМАНИЕ !!!

Например см. ADDDATE.SQL:

**********************************************************************************
mysql> SELECT ADDTIME('2014-11-02 09:33:16.000001', '2.000001');

#Результат:   2014-11-02 09:33:18.000002                        

mysql> SELECT ADDTIME('2014-11-02 09:33:16.000001', '3:2.000001');

#Результат:   2014-11-02 12:35:16.000002                          

mysql> SELECT ADDTIME('2014-11-02 09:33:16.000001', '4:3:2.000001');

#Результат:   2014-11-02 13:36:18.000002                            

mysql> SELECT ADDTIME('2014-11-02 09:33:16.000001', '5 4:3:2.000001');

#Результат:   2014-11-07 13:36:18.000002                              

mysql> SELECT ADDTIME('01:14:23.999998', '0.000001');

#Результат:   01:14:23.999999                        

mysql> SELECT ADDTIME('01:14:23.999998', '5.000001');

#Результат:   01:14:28.999999                        

mysql> SELECT ADDTIME('01:14:23.000001', '8:12:15.003441');

#Результат:   09:26:38.003442                              

mysql> SELECT ADDTIME('01:14:23.000001', '-8:12:15.003441');

#Результат:   -06:57:52.003440
**********************************************************************************